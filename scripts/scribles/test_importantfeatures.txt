Loading dictionary from file..
('Kodak', 'M1063') : 2458
('Ricoh', 'GX100') : 1283
('Panasonic', 'DMC-FZ50') : 962
('PS', 'Vita') : 220
('Olympus', 'mju') : 1052
('Sony', 'DSC-H50') : 593
('Agfa', 'DC-504') : 262
('Rollei', 'RCP-7325XS') : 607
('Panasonic', 'Lumix-FZ45') : 356
('Samsung', 'ST30') : 340
('FujiFilm', 'FinePixJ50') : 647
('Praktica', 'DCZ5.9') : 1039
('Nikon', 'D200') : 831
('Samsung', 'Digimax-S500') : 1060
('Casio', 'EXILIM-EX-FC100') : 15
('Nikon', 'D70') : 405
('Canon', 'Ixus55') : 242
('Casio', 'EX-Z150') : 946
('Samsung', 'Galaxy-S3-mini') : 1280
('Logitech', 'QuickCam-Communicate-STX') : 4059
('Nikon', 'D70s') : 409
('Motorola', 'V360') : 4060
('Samsung', 'L74wide') : 705
('Agfa', 'Sensor530s') : 406
('Epson', 'StylusSX205') : 31
('Samsung', 'NV15') : 663
('Agfa', 'Sensor505-x') : 209
('Canon', 'Ixus70') : 585
('Samsung', 'NX1000') : 350
('Blackberry', 'Curve-9300') : 1080
('Nikon', 'CoolPixS710') : 993
('Pentax', 'OptioW60') : 239
('Sony', 'DSC-W170') : 422
('Canon', 'Powershot-A430') : 10326
('Pentax', 'OptioA40') : 715
('Canon', 'PowerShotA640') : 188
('Agfa', 'DC-830i') : 414
('Agfa', 'DC-733s') : 329
('Blackberry', 'Curve-9360') : 2669
('Canon', 'Powershot-A630') : 1458
('Sony', 'DSC-T77') : 758
PS : 1
Pentax : 2
Motorola : 1
Epson : 1
Rollei : 1
Samsung : 6
Blackberry : 2
Logitech : 1
Canon : 5
Casio : 2
Olympus : 1
Kodak : 1
Nikon : 4
Ricoh : 1
FujiFilm : 1
Praktica : 1
Sony : 3
Agfa : 5
Panasonic : 2
TOTAL: 45666
Creating feature and class lists..
KEY VALUE = cameramodel
DT> old shape: (45666, 64) 
>>>> shape feature selection:
(45666, 89)
3.45143730463
IMPORTANT FEATURES
DQT1:
['0.22', '0.21', '0.00', '0.01', '0.88', '0.34', '0.19', '0.02']
['0.01', '0.15', '0.00', '0.57', '0.27', '0.03', '0.25', '0.19']
['0.21', '0.06', '0.23', '0.14', '0.06', '0.27', '0.91', '0.00']
['0.02', '0.03', '0.17', '0.15', '0.32', '0.37', '0.46', '0.04']
['0.01', '1.38', '0.03', '0.23', '0.16', '0.10', '0.41', '0.61']
['0.30', '0.98', '0.01', '1.19', '0.03', '0.23', '0.01', '0.03']
['0.13', '0.21', '0.25', '0.75', '0.03', '0.79', '0.07', '0.01']
['1.16', '0.14', '0.76', '0.02', '1.02', '1.22', '0.03', '0.23']
rest DQT1:
	 Totalsum: 0.18, diagonalsum: 0.39, diagonalsum: 0.10, max: 0.27, min: 0.04
	 Mean: 1.01, median: 0.21, var: 0.16, std: 1.71
axis: 0
	Min: ['0.11', '0.41', '0.21', '0.03', '0.01', '1.54', '1.40', '0.12'] 
	 Max: ['1.25', '0.16', '0.04', '0.12', '0.34', '0.37', '1.05', '0.26'] 
	 Mean: ['0.13', '0.10', '0.36', '0.05', '0.30', '0.15', '0.09'] 
	 Median: ['0.55', '0.38', '0.40', '0.09', '0.18', '0.10', '0.57', '1.67'] 
	 Var: ['0.37', '1.26', '1.75', '0.28', '0.09', '0.14', '0.09', '0.41'] 
	 Std: ['0.41', '0.34', '1.02', '0.47', '0.05', '0.12', '0.20', '1.12']
axis: 1
	Min: ['0.33', '0.21', '0.02', '0.46', '0.17', '0.17', '0.08', '0.25'] 
	 Max: ['0.06', '0.35', '0.17', '0.18', '0.09', '0.59', '1.03', '0.17'] 
	 Mean: ['0.06', '0.07', '1.46', '0.05', '0.20', '0.09', '0.05'] 
	 Median: ['0.18', '2.33', '0.67', '0.45', '0.03', '0.22', '0.11', '0.27'] 
	 Var: ['0.32', '0.13', '0.17', '1.78', '0.25', '0.59', '0.19', '1.06'] 
	 Std: ['2.06']
DQT2:
['0.09', '0.11', '0.01', '0.04', '0.03', '0.36', '0.52', '0.26']
['0.10', '0.03', '0.27', '0.06', '0.00', '0.01', '0.01', '0.00']
['0.06', '0.36', '0.02', '0.00', '0.00', '0.01', '0.00', '0.01']
['0.01', '0.29', '0.20', '0.49', '0.01', '0.00', '0.00', '0.01']
['0.12', '0.07', '0.27', '0.00', '0.00', '0.15', '0.01', '1.21']
['1.63', '1.38', '0.01', '0.00', '0.53', '0.00', '0.31', '0.01']
['0.02', '0.00', '0.01', '0.07', '0.14', '0.00', '0.01', '0.00']
['0.13', '0.02', '0.79', '0.01', '0.00', '0.08', '0.37', '0.00']
rest DQT2:
	 Totalsum: 0.09, diagonalsum: 0.03, diagonalsum: 0.73, max: 0.97, min: 0.17
	 Mean: 0.06, median: 0.39, var: 0.08, std: 0.25
axis: 0
	Min: ['0.12', '0.10', '0.06', '0.26', '0.65', '0.89', '0.13', '0.06'] 
	 Max: ['0.01', '0.07', '1.48', '0.01', '0.01', '0.04', '0.00', '0.08'] 
	 Mean: ['0.02', '0.09', '0.03', '0.05', '0.04', '0.08', '0.14'] 
	 Median: ['0.10', '0.23', '0.23', '0.03', '0.09', '0.20', '0.08', '0.14'] 
	 Var: ['0.00', '0.39', '0.07', '0.07', '0.95', '0.01', '0.21', '0.69'] 
	 Std: ['0.28', '1.58', '0.07', '0.02', '0.18', '0.58', '0.01', '0.02']
axis: 1
	Min: ['0.00', '0.12', '0.09', '0.02', '0.01', '0.00', '0.32', '0.20'] 
	 Max: ['0.02', '0.01', '0.23', '0.14', '0.01', '0.00', '1.84', '0.00'] 
	 Mean: ['0.24', '0.14', '0.00', '0.00', '1.19', '0.00', '0.04'] 
	 Median: ['0.11', '0.17', '0.07', '0.08', '3.45', '1.89', '0.01', '0.00'] 
	 Var: ['0.00', '0.17', '0.59', '0.07', '1.39', '0.03', '0.00', '0.00'] 
	 Std: ['0.01']
DT> new shape:
(45666, 89)
Creating train and test sets..
Start training..
> Training hash function..
H> old length hash dict: 36532 
 H> new length hash dict: 938
..... Elapsed time: 0.01206 
DT> Training decision tree..
..... Elapsed time: 3.91955 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00567 
DT> Testing decision tree function..
..... Elapsed time: 0.11567 
METRICS FSCORE HASH
(0.37780195380143444, 0.39008101598423472, 0.35272197106478825, None)
METRICS FSCORE DECISION TREE
(0.77652980440238317, 0.81585285745566016, 0.80072008414310891, None)
HASH precision: 0.3778 	 recall: 0.3901
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 950
..... Elapsed time: 0.00700 
DT> Training decision tree..
..... Elapsed time: 3.92600 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00470 
DT> Testing decision tree function..
..... Elapsed time: 0.11201 
METRICS FSCORE HASH
(0.37056196643281214, 0.38388262345341073, 0.34646553778192246, None)
METRICS FSCORE DECISION TREE
(0.77950190169327194, 0.82010292346435998, 0.80547424756372221, None)
HASH precision: 0.3706 	 recall: 0.3839
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 950
..... Elapsed time: 0.00638 
DT> Training decision tree..
..... Elapsed time: 3.94068 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00459 
DT> Testing decision tree function..
..... Elapsed time: 0.11861 
METRICS FSCORE HASH
(0.36378917932970412, 0.38574400525566627, 0.34838546720442831, None)
METRICS FSCORE DECISION TREE
(0.7645135107701051, 0.81769407642614689, 0.80082069999966066, None)
HASH precision: 0.3638 	 recall: 0.3857
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 949
..... Elapsed time: 0.00736 
DT> Training decision tree..
..... Elapsed time: 3.95359 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00445 
DT> Testing decision tree function..
..... Elapsed time: 0.11382 
METRICS FSCORE HASH
(0.44487412030260642, 0.38859082448264537, 0.35093718390934769, None)
METRICS FSCORE DECISION TREE
(0.77880090751161257, 0.81769407642614689, 0.80326774175821503, None)
HASH precision: 0.4449 	 recall: 0.3886
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 930
..... Elapsed time: 0.00731 
DT> Training decision tree..
..... Elapsed time: 3.98088 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00457 
DT> Testing decision tree function..
..... Elapsed time: 0.11383 
METRICS FSCORE HASH
(0.38176561302167122, 0.38913828971860287, 0.3510596443682637, None)
METRICS FSCORE DECISION TREE
(0.78101750717413621, 0.81922697908682796, 0.80616830962789565, None)
HASH precision: 0.3818 	 recall: 0.3891

HASH ALGORITHM:
0:	0.3778	0.3901
1:	0.3706	0.3839
2:	0.3638	0.3857
3:	0.4449	0.3886
4:	0.3818	0.3891
Average:	 0.3878 	 0.3875


DT ALGORITHM:
0:	0.7765	0.8159
1:	0.7795	0.8201
2:	0.7645	0.8177
3:	0.7788	0.8177
4:	0.7810	0.8192
Average:	 0.7761 	 0.8181
