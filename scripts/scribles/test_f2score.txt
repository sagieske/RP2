Loading dictionary from file..
('Kodak', 'M1063') : 2458
('Ricoh', 'GX100') : 1283
('Panasonic', 'DMC-FZ50') : 962
('PS', 'Vita') : 220
('Olympus', 'mju') : 1052
('Sony', 'DSC-H50') : 593
('Agfa', 'DC-504') : 262
('Rollei', 'RCP-7325XS') : 607
('Panasonic', 'Lumix-FZ45') : 356
('Samsung', 'ST30') : 340
('FujiFilm', 'FinePixJ50') : 647
('Praktica', 'DCZ5.9') : 1039
('Nikon', 'D200') : 831
('Samsung', 'Digimax-S500') : 1060
('Casio', 'EXILIM-EX-FC100') : 15
('Nikon', 'D70') : 405
('Canon', 'Ixus55') : 242
('Casio', 'EX-Z150') : 946
('Samsung', 'Galaxy-S3-mini') : 1280
('Logitech', 'QuickCam-Communicate-STX') : 4059
('Nikon', 'D70s') : 409
('Motorola', 'V360') : 4060
('Samsung', 'L74wide') : 705
('Agfa', 'Sensor530s') : 406
('Epson', 'StylusSX205') : 31
('Samsung', 'NV15') : 663
('Agfa', 'Sensor505-x') : 209
('Canon', 'Ixus70') : 585
('Samsung', 'NX1000') : 350
('Blackberry', 'Curve-9300') : 1080
('Nikon', 'CoolPixS710') : 993
('Pentax', 'OptioW60') : 239
('Sony', 'DSC-W170') : 422
('Canon', 'Powershot-A430') : 10326
('Pentax', 'OptioA40') : 715
('Canon', 'PowerShotA640') : 188
('Agfa', 'DC-830i') : 414
('Agfa', 'DC-733s') : 329
('Blackberry', 'Curve-9360') : 2669
('Canon', 'Powershot-A630') : 1458
('Sony', 'DSC-T77') : 758
TOTAL: 45666
Creating feature and class lists..
45666
>>>> shape feature selection:
(45666, 96)
[  1.80048761e-03   5.91708898e-04   1.09939350e-04   2.33059007e-03
   6.63549970e-04   1.28177601e-03   1.27354071e-05   3.28454077e-03
   1.77661086e-04   8.18484526e-04   2.79562723e-05   8.58248740e-04
   1.34766725e-03   2.85165203e-03   1.14356933e-03   2.41520320e-03
   5.79056571e-04   2.13968939e-03   8.39012420e-05   2.17496666e-04
   7.78097762e-03   1.52082636e-03   9.72192707e-03   2.10531465e-05
   5.47119147e-05   1.66385907e-03   3.00388675e-04   4.61192460e-03
   8.55822188e-04   2.58757696e-03   1.68077441e-03   3.30233602e-04
   2.54249183e-03   4.81766574e-03   3.12394313e-03   7.20407875e-04
   8.93692553e-05   8.26317556e-03   6.24445839e-05   1.03630018e-02
   4.68007845e-03   2.63674914e-03   1.03223519e-02   5.40880853e-04
   3.80022426e-04   4.61465745e-04   7.53265958e-04   6.93260797e-04
   5.88119797e-04   7.28385087e-04   1.18413161e-03   7.08467253e-04
   7.63040692e-03   1.68843159e-02   2.58193277e-04   7.36159352e-03
   2.03255344e-04   5.01366389e-03   7.86387567e-04   8.31728145e-04
   1.15963322e-03   9.57151121e-05   1.67891461e-03   8.68214074e-03
   6.09707084e-03   8.81022010e-03   2.99041563e-03   2.28526195e-03
   2.10910768e-04   7.77019892e-04   1.15269385e-04   1.76053773e-03
   6.00994125e-03   1.48646101e-03   1.65100721e-03   5.15489327e-04
   1.25229797e-03   1.87364919e-03   5.94062172e-03   2.33711781e-03
   2.28911183e-03   1.16001308e-03   4.11495222e-04   6.87519283e-04
   3.96013419e-04   2.19878452e-04   2.88452223e-03   3.89063753e-03
   9.02360590e-05   2.14459762e-03   1.43726503e-02   3.08363916e-03
   1.27887040e-03   6.93643633e-03   9.90828393e-04   8.15359270e-04
   1.41040297e-02   8.59366405e-04   1.81249921e-02   2.53215098e-03
   3.23726818e-03   5.48584031e-04   9.27439345e-04   1.31270540e-02
   8.85589457e-03   4.90773296e-04   8.27258043e-03   8.30547166e-04
   7.58567210e-04   8.90705436e-04   4.11440375e-03   1.53407628e-03
   6.19703540e-03   2.25616288e-03   4.43763883e-03   7.76946547e-04
   4.11369916e-04   1.30167134e-03   1.41080800e-02   1.14567301e-02
   5.64609996e-03   9.97857150e-04   0.00000000e+00   1.49640434e-03
   1.84249738e-02   3.45141958e-03   2.68045848e-03   5.04628598e-04
   3.86297606e-03   3.54589335e-03   1.55823983e-02   5.06656596e-03
   1.75853164e-03   1.68461741e-03   2.49980918e-03   1.33282753e-03
   1.44867690e-03   9.25846597e-03   8.50418102e-04   9.24819083e-03
   2.09258487e-03   5.83268091e-04   2.97704380e-03   2.05486180e-03
   4.90711208e-04   1.74944494e-03   6.06915396e-04   4.29078738e-04
   1.01138243e-03   4.91172625e-05   1.05400460e-03   5.21279191e-03
   4.68871419e-04   1.16905889e-02   1.39639268e-03   1.99097478e-02
   4.36459123e-03   1.31865869e-03   4.46470754e-03   1.16507814e-03
   9.45250320e-03   2.48260345e-03   1.79112285e-03   1.82582594e-03
   1.69980068e-03   1.72871650e-03   1.28617744e-03   1.80079033e-02
   1.16459657e-03   1.54499763e-03   9.44840648e-04   2.63296401e-04
   8.32414136e-03   8.48142809e-04   1.76882086e-02   1.70241716e-05
   2.28690464e-03   9.50602813e-04   2.00652590e-04   2.03090640e-03
   1.80293920e-03   4.25504733e-03   8.79048814e-05   5.03955263e-06
   7.09041416e-06   5.22370039e-04   1.98892234e-03   2.55748017e-03
   4.75719112e-03   2.22512243e-03   1.90814173e-04   6.67918785e-05
   7.85202216e-04   9.33126039e-03   1.38713229e-03   1.54356152e-05
   2.22803992e-04   1.40904476e-02   1.00115420e-05   1.22118655e-05
   2.18188910e-03   3.25805323e-03   9.56157955e-04   3.16760058e-04
   5.94778155e-05   3.25967810e-05   1.00849582e-04   9.08557888e-06
   1.10354136e-04   7.05233752e-05   1.36839167e-03   7.56218393e-06
   6.75376746e-03   3.07910239e-05   1.52883734e-03   4.30944177e-04
   1.24942595e-05   2.63624835e-04   1.15125890e-02   6.19077121e-03
   1.29954251e-03   8.94114442e-05   1.24043710e-05   9.25793536e-03
   1.33121159e-03   1.88439188e-05   1.32786821e-02   2.99031401e-05
   1.20750397e-04   4.62207907e-05   4.86386471e-05   2.98998658e-05
   3.21500232e-03   6.29967250e-03   1.43305700e-03   1.36018126e-05
   7.46038073e-04   3.91999968e-03   7.66367584e-05   1.21906553e-04
   1.37268630e-03   5.49269297e-03   3.09307944e-03   3.13556164e-04
   2.45513765e-03   4.75921604e-03   5.69259149e-03   3.28509805e-06
   8.47437888e-03   4.51745813e-04   2.56742840e-05   1.08260071e-02
   1.20279303e-05   1.51882414e-04   1.72287082e-03   2.52651620e-03
   1.96635914e-03   2.96042018e-04   6.34335103e-04   8.73552626e-04
   1.09505431e-04   1.17995002e-04   1.80330886e-02   2.46780650e-04
   1.16030352e-04   3.10961378e-03   5.56621936e-06   8.86423575e-04
   1.44453009e-05   1.39240387e-07   7.48036728e-04   1.42025194e-05
   6.86406740e-04   2.33126931e-03   5.21840798e-03   1.74274896e-02
   5.01163897e-04   5.00257518e-03   3.80779291e-03   2.83423827e-03
   6.64345459e-04   3.65333582e-03   1.48599085e-02   9.53827006e-03
   9.11990259e-03   1.23028830e-03   3.23476346e-03   4.57324154e-04
   8.07734748e-05   1.02855526e-02   1.80088200e-03   2.79305733e-03
   6.68523158e-05   1.68017861e-03   7.51538058e-05   3.79164994e-06
   3.37650856e-03   2.07624655e-05   1.57687220e-04   5.76467479e-05
   1.15015862e-05   5.34174767e-05   1.08015538e-02   1.17620760e-02
   3.21702972e-05   2.33392003e-06   3.02370750e-03   1.08927650e-04
   7.28444089e-03   3.04565715e-03   2.29369906e-04   1.85454463e-03
   9.60396807e-03   1.48584907e-03   1.34263896e-03   1.41560350e-04
   5.50901466e-04   6.49154360e-03   8.52478659e-05   1.17959779e-03
   1.74615782e-04   5.24268169e-05   6.31344414e-04   1.48418501e-04
   3.99507858e-03   1.10079800e-02   2.82106406e-03   0.00000000e+00
   1.09894695e-04   0.00000000e+00   1.77243648e-03   2.03369214e-03
   2.51710391e-03   1.63333106e-04   2.79247179e-02   1.38185347e-04
   0.00000000e+00   0.00000000e+00]
DT> new shape:
(45666, 96)
Creating train and test sets..
Start training..
> Training hash function..
H> old length hash dict: 36532 
 H> new length hash dict: 933
..... Elapsed time: 0.01053 
DT> Training decision tree..
..... Elapsed time: 3.55647 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00486 
DT> Testing decision tree function..
..... Elapsed time: 0.11174 
METRICS FSCORE
(array([ 0.        ,  0.98113208,  0.65900383,  0.96855346,  1.        ,
        0.        ,  0.33021515,  0.33333333,  0.83333333,  0.7765625 ,
        1.        ,  0.2       ,  0.57229648,  0.9947644 ,  0.96966161,
        0.        ,  1.        ,  0.        ,  1.        ,  0.12662619]), array([ 0.        ,  0.84725051,  0.6692607 ,  0.58555133,  1.        ,
        0.        ,  0.99717514,  0.4537037 ,  0.04098361,  0.56541524,
        0.00769231,  0.00483092,  0.89204545,  0.98958333,  0.97382813,
        0.        ,  1.        ,  0.        ,  0.712     ,  0.76439791]), array([ 0.        ,  0.87102178,  0.66718386,  0.63583815,  1.        ,
        0.        ,  0.71026157,  0.42314335,  0.05060729,  0.5979307 ,
        0.00959693,  0.0060024 ,  0.80238501,  0.99061522,  0.97299196,
        0.        ,  1.        ,  0.        ,  0.75551783,  0.38080334]), array([   1,  491,  257,  263,   44,  211,  354,  324,  122,  879,  130,
        207,  528,  192, 2560,  812,  812,    6,  750,  191]))
(array([ 0.        ,  0.98792757,  0.88727273,  0.955     ,  1.        ,
        0.49295775,  0.49658314,  0.84615385,  0.50413223,  0.76493506,
        0.79503106,  0.44444444,  0.81167608,  1.        ,  1.        ,
        0.99631902,  1.        ,  1.        ,  0.99734043,  1.        ]), array([ 0.        ,  1.        ,  0.94941634,  0.72623574,  1.        ,
        0.66350711,  0.61581921,  0.7808642 ,  1.        ,  0.67007964,
        0.98461538,  0.4057971 ,  0.81628788,  0.98958333,  0.9703125 ,
        1.        ,  1.        ,  1.        ,  1.        ,  0.7539267 ]), array([ 0.        ,  0.99756197,  0.93630084,  0.76277955,  1.        ,
        0.62056738,  0.58760108,  0.79310345,  0.83561644,  0.68712086,
        0.93979442,  0.41297935,  0.81536133,  0.99164927,  0.97610814,
        0.99926163,  1.        ,  1.        ,  0.99946695,  0.79295154]), array([   1,  491,  257,  263,   44,  211,  354,  324,  122,  879,  130,
        207,  528,  192, 2560,  812,  812,    6,  750,  191]))
HASH precision: 0.7327 	 recall: 0.7046
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 944
..... Elapsed time: 0.00639 
DT> Training decision tree..
..... Elapsed time: 3.52086 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00396 
DT> Testing decision tree function..
..... Elapsed time: 0.10892 
METRICS FSCORE
(array([ 0.99236641,  0.60498221,  0.98203593,  1.        ,  0.        ,
        0.32656827,  0.33634312,  0.        ,  0.78477306,  0.5       ,
        0.16666667,  0.60180412,  0.9895288 ,  0.73665585,  0.        ,
        1.        ,  0.        ,  1.        ,  0.44307692]), array([ 0.79268293,  0.6640625 ,  0.62121212,  1.        ,  0.        ,
        0.9971831 ,  0.45987654,  0.        ,  0.60909091,  0.00775194,
        0.00480769,  0.8844697 ,  0.984375  ,  0.97578125,  0.        ,
        1.        ,  0.        ,  0.71333333,  0.75789474]), array([ 0.82592122,  0.651341  ,  0.67048242,  1.        ,  0.        ,
        0.70686901,  0.42840713,  0.        ,  0.63763978,  0.00965251,
        0.00596659,  0.80851801,  0.98540146,  0.91629374,  0.        ,
        1.        ,  0.        ,  0.75671853,  0.66359447]), array([ 492,  256,  264,   44,  210,  355,  324,  121,  880,  129,  208,
        528,  192, 2560,  812,  812,    6,  750,  190]))
(array([ 0.99391481,  0.89454545,  0.93203883,  1.        ,  0.5       ,
        0.49111111,  0.85185185,  0.50840336,  0.7539267 ,  0.7875    ,
        0.40223464,  0.80300188,  1.        ,  0.99919743,  0.99631902,
        1.        ,  0.75      ,  0.99734043,  0.97260274]), array([ 0.99593496,  0.9609375 ,  0.72727273,  1.        ,  0.66666667,
        0.62253521,  0.7808642 ,  1.        ,  0.65454545,  0.97674419,
        0.34615385,  0.81060606,  0.984375  ,  0.97265625,  1.        ,
        1.        ,  1.        ,  1.        ,  0.74736842]), array([ 0.99553027,  0.94688222,  0.76069731,  1.        ,  0.625     ,
        0.59090909,  0.79409918,  0.83795014,  0.67226891,  0.93195266,
        0.35608309,  0.80907372,  0.98746082,  0.97785108,  0.99926163,
        1.        ,  0.9375    ,  0.99946695,  0.78366446]), array([ 492,  256,  264,   44,  210,  355,  324,  121,  880,  129,  208,
        528,  192, 2560,  812,  812,    6,  750,  190]))
HASH precision: 0.6570 	 recall: 0.7067
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 958
..... Elapsed time: 0.00644 
DT> Training decision tree..
..... Elapsed time: 3.59005 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00387 
DT> Testing decision tree function..
..... Elapsed time: 0.10921 
METRICS FSCORE
(array([ 0.98574822,  0.67045455,  0.96835443,  1.        ,  0.        ,
        0.32594645,  0.30995475,  0.        ,  0.79003021,  0.        ,
        0.1       ,  0.60201511,  1.        ,  0.74025974,  0.        ,
        1.        ,  0.        ,  1.        ,  0.43543544]), array([ 0.84349593,  0.69140625,  0.57954545,  1.        ,  0.        ,
        0.9943662 ,  0.42283951,  0.        ,  0.59431818,  0.        ,
        0.00480769,  0.90530303,  0.97916667,  0.9796875 ,  0.        ,
        1.        ,  0.        ,  0.71161549,  0.7591623 ]), array([ 0.86856425,  0.6871118 ,  0.63014827,  1.        ,  0.        ,
        0.70515382,  0.39413119,  0.        ,  0.6252989 ,  0.        ,
        0.00593824,  0.82243634,  0.9832636 ,  0.92016437,  0.        ,
        1.        ,  0.        ,  0.75517144,  0.66089335]), array([ 492,  256,  264,   44,  210,  355,  324,  121,  880,  129,  208,
        528,  192, 2560,  811,  812,    7,  749,  191]))
(array([ 0.99595142,  0.90188679,  0.97959184,  1.        ,  0.50684932,
        0.51590909,  0.86622074,  0.49787234,  0.78201635,  0.77108434,
        0.43406593,  0.77583187,  1.        ,  1.        ,  0.99876847,
        1.        ,  0.875     ,  0.99601064,  0.97959184]), array([ 1.        ,  0.93359375,  0.72727273,  1.        ,  0.7047619 ,
        0.63943662,  0.79938272,  0.96694215,  0.65227273,  0.99224806,
        0.37980769,  0.83901515,  0.97916667,  0.975     ,  1.        ,
        1.        ,  1.        ,  1.        ,  0.7539267 ]), array([ 0.99918765,  0.92707525,  0.76677316,  1.        ,  0.65371025,
        0.61021505,  0.81191223,  0.81363004,  0.67465914,  0.93841642,
        0.38954635,  0.82556839,  0.9832636 ,  0.9798995 ,  0.99975345,
        1.        ,  0.97222222,  0.99919957,  0.79034029]), array([ 492,  256,  264,   44,  210,  355,  324,  121,  880,  129,  208,
        528,  192, 2560,  811,  812,    7,  749,  191]))
HASH precision: 0.6501 	 recall: 0.7081
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 943
..... Elapsed time: 0.00641 
DT> Training decision tree..
..... Elapsed time: 3.79421 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00402 
DT> Testing decision tree function..
..... Elapsed time: 0.10901 
METRICS FSCORE
(array([ 0.9862069 ,  0.71129707,  0.96470588,  1.        ,  0.        ,
        0.33021515,  0.32413793,  0.        ,  0.80787402,  0.        ,
        0.07142857,  0.57894737,  1.        ,  0.73695075,  0.        ,
        1.        ,  0.        ,  1.        ,  0.41954023]), array([ 0.87372709,  0.6614786 ,  0.62121212,  1.        ,  0.        ,
        0.9943662 ,  0.43518519,  0.        ,  0.58295455,  0.        ,
        0.00480769,  0.89753321,  0.98445596,  0.97655334,  0.        ,
        1.        ,  0.        ,  0.712     ,  0.76439791]), array([ 0.89412255,  0.67087609,  0.66884176,  1.        ,  0.        ,
        0.70912013,  0.40727903,  0.        ,  0.61732852,  0.        ,
        0.00591017,  0.80854701,  0.98752599,  0.91692963,  0.        ,
        1.        ,  0.        ,  0.75551783,  0.65647482]), array([ 491,  257,  264,   44,  210,  355,  324,  121,  880,  129,  208,
        527,  193, 2559,  812,  812,    6,  750,  191]))
(array([ 0.9760479 ,  0.9034749 ,  0.965     ,  1.        ,  0.48543689,
        0.48820755,  0.86      ,  0.51271186,  0.76103896,  0.7826087 ,
        0.41269841,  0.82542694,  1.        ,  1.        ,  0.99631902,
        1.        ,  0.85714286,  1.        ,  1.        ]), array([ 0.99592668,  0.91050584,  0.73106061,  1.        ,  0.71428571,
        0.58309859,  0.7962963 ,  1.        ,  0.66590909,  0.97674419,
        0.375     ,  0.82542694,  0.98445596,  0.9738179 ,  1.        ,
        1.        ,  1.        ,  1.        ,  0.76963351]), array([ 0.99188641,  0.90909091,  0.7683121 ,  1.        ,  0.65274151,
        0.56127983,  0.80827068,  0.84027778,  0.68298368,  0.93057607,
        0.38197845,  0.82542694,  0.98752599,  0.97894406,  0.99926163,
        1.        ,  0.96774194,  1.        ,  0.80680571]), array([ 491,  257,  264,   44,  210,  355,  324,  121,  880,  129,  208,
        527,  193, 2559,  812,  812,    6,  750,  191]))
HASH precision: 0.6504 	 recall: 0.7083
Start training..
> Training hash function..
H> old length hash dict: 36533 
 H> new length hash dict: 945
..... Elapsed time: 0.00697 
DT> Training decision tree..
..... Elapsed time: 3.70093 
Start prediction..
H> Testing hash function..
..... Elapsed time: 0.00387 
DT> Testing decision tree function..
..... Elapsed time: 0.10883 
METRICS FSCORE
(array([ 0.97668394,  0.58940397,  0.99375   ,  1.        ,  0.        ,
        0.3258427 ,  0.30896226,  0.        ,  0.80847724,  1.        ,
        0.14285714,  0.58515815,  0.9895288 ,  0.73850236,  0.        ,
        0.997543  ,  0.        ,  1.        ,  0.41595442]), array([ 0.76782077,  0.692607  ,  0.60456274,  1.        ,  0.        ,
        0.98305085,  0.40432099,  0.        ,  0.58589306,  0.00769231,
        0.00480769,  0.91271347,  0.984375  ,  0.97851562,  0.        ,
        1.        ,  0.        ,  0.71066667,  0.76439791]), array([ 0.80212766,  0.66917293,  0.65594059,  1.        ,  0.        ,
        0.70048309,  0.38081395,  0.        ,  0.62003371,  0.00959693,
        0.00595948,  0.82081911,  0.98540146,  0.91879401,  0.        ,
        0.99950763,  0.        ,  0.75431644,  0.65470852]), array([ 491,  257,  263,   44,  211,  354,  324,  122,  879,  130,  208,
        527,  192, 2560,  812,  812,    6,  750,  191]))
(array([ 0.99185336,  0.88405797,  0.72852234,  1.        ,  0.48504983,
        0.48526077,  0.8877193 ,  0.51476793,  0.85887709,  0.81761006,
        0.46666667,  0.82169118,  0.9895288 ,  1.        ,  0.99876999,
        1.        ,  1.        ,  0.99734043,  0.97986577]), array([ 0.99185336,  0.94941634,  0.80608365,  1.        ,  0.69194313,
        0.60451977,  0.7808642 ,  1.        ,  0.64391354,  1.        ,
        0.4375    ,  0.84819734,  0.984375  ,  0.97148437,  1.        ,
        1.        ,  1.        ,  1.        ,  0.76439791]), array([ 0.99185336,  0.93558282,  0.78927774,  1.        ,  0.63755459,
        0.57619817,  0.8001265 ,  0.84137931,  0.67784431,  0.95729013,
        0.44303797,  0.84276018,  0.98540146,  0.97705665,  0.99975376,
        1.        ,  1.        ,  0.99946695,  0.79956188]), array([ 491,  257,  263,   44,  211,  354,  324,  122,  879,  130,  208,
        527,  192, 2560,  812,  812,    6,  750,  191]))
HASH precision: 0.6625 	 recall: 0.7029

HASH ALGORITHM:
0:	0.7327	0.7046
1:	0.6570	0.7067
2:	0.6501	0.7081
3:	0.6504	0.7083
4:	0.6625	0.7029
Average:	 0.6705 	 0.7061


DT ALGORITHM:
0:	0.9019	0.8904
1:	0.8985	0.8880
2:	0.9038	0.8923
3:	0.9019	0.8902
4:	0.9066	0.8932
Average:	 0.9025 	 0.8908
